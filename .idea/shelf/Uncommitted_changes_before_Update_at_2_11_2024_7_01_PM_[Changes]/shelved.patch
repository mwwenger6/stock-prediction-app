Index: Front_End/src/Views/LoginModal.tsx
===================================================================
diff --git a/Front_End/src/Views/LoginModal.tsx b/Front_End/src/Views/LoginModal.tsx
deleted file mode 100644
--- a/Front_End/src/Views/LoginModal.tsx	(revision 60c35c43066e8d7080b0b669600544faf1e0c427)
+++ /dev/null	(revision 60c35c43066e8d7080b0b669600544faf1e0c427)
@@ -1,44 +0,0 @@
-import Modal from "react-bootstrap/Modal";
-import Button from "react-bootstrap/Button";
-import React, {useState} from 'react';
-
-function LoginModal (props: any) {
-
-    const [email, setEmail] = useState('');
-    const [password, setPassword] = useState('');
-    const [queryResponse, setQueryResponse] = useState('');
-
-    return (
-        <div>
-            <Modal show={props.showModal} onHide={props.toggleModal} className="modal-sm">
-                <Modal.Header closeButton>
-                    <Modal.Title className="w-100 text-center"> Log In </Modal.Title>
-                </Modal.Header>
-                <Modal.Body>
-                    <div className="w-100 text-center">
-                    <form className="login-form">
-                    <label htmlFor="email">Email:</label>
-                    <input type="email" id="email" name="email" placeholder="Please enter your email" />
-                    <label htmlFor="password"> Password:</label>
-                    <input type="password" id="password" name="password" placeholder="Please enter your password"/>
-                </form>
-                        <div className={queryResponse === '' ? "text-white" : (queryResponse === 'Account created' ? "text-success" : "text-danger fw-semibold")} >
-                            {queryResponse === '' ? 'Placeholder' : (queryResponse === 'Account created' ? queryResponse : '*' + queryResponse)}
-                        </div>
-                    </div>
-                <div className="justify-content-center d-flex">
-                    <Button className="bg-success border-0 mx-2">
-                         Submit 
-                    </Button>
-                </div>
-                </Modal.Body>
-                <Modal.Footer className="justify-content-center d-flex">
-                        <a href="/login">Sign Up</a>
-                        <a href="/login">Forgot Password?</a>
-                </Modal.Footer>
-            </Modal>
-        </div>
-);
-}
-
-export default LoginModal;
Index: Miscellaneous/READ-AFTER-PULLING
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Michael:\r\n\r\n12/4/2023\r\nAdded Routing, temp views, and working search bar. Need to install this package:  npm i react-router-dom\r\n\r\n12/6/2023\r\nAdded Graphs. Need to install this package: npm i echarts-for-react\r\n\r\nJacob:\r\n\r\n1/16/2024\r\nAdded 'download csv' button to the graph screen (for skete): npm install @types/react-json-to-csv\r\n\r\n\r\nTom:\r\n\r\n\r\nPeter:\r\n\r\n12/6/2023\r\nFinished the project.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Miscellaneous/READ-AFTER-PULLING b/Miscellaneous/READ-AFTER-PULLING
--- a/Miscellaneous/READ-AFTER-PULLING	(revision 60c35c43066e8d7080b0b669600544faf1e0c427)
+++ b/Miscellaneous/READ-AFTER-PULLING	(date 1707692336365)
@@ -11,6 +11,9 @@
 1/16/2024
 Added 'download csv' button to the graph screen (for skete): npm install @types/react-json-to-csv
 
+2/11/2024
+Added react icons: npm install react-icons
+
 
 Tom:
 
Index: Front_End/src/Views/Modals/LoginModal.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Front_End/src/Views/Modals/LoginModal.tsx b/Front_End/src/Views/Modals/LoginModal.tsx
new file mode 100644
--- /dev/null	(date 1707696050090)
+++ b/Front_End/src/Views/Modals/LoginModal.tsx	(date 1707696050090)
@@ -0,0 +1,106 @@
+import Modal from "react-bootstrap/Modal";
+import Button from "react-bootstrap/Button";
+import React, {useEffect, useState} from 'react';
+import { FaEye, FaEyeSlash } from 'react-icons/fa';
+
+interface User {
+    email: string;
+    password: string;
+    id: number;
+    createdAt: string;
+}
+
+function LoginModal(props: any) {
+    const [email, setEmail] = useState('');
+    const [password, setPassword] = useState('');
+    const [queryResponse, setQueryResponse] = useState('');
+    const [showPassword, setShowPassword] = useState(false);
+    const SUCCESS: string = "Log In Successful"
+    const FAILURE: string = "Log In Failed"
+    const INCORRECT_PASSWORD = "Incorrect Password"
+
+    useEffect(() => {
+        if (!props.showModal) {
+            setEmail('');
+            setPassword('');
+            setQueryResponse('');
+            setShowPassword(false);
+        }
+    }, [props.showModal]);
+
+    const handleSubmit = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {
+        event.preventDefault();
+        console.log("Email:", email);
+        console.log("Password:", password);
+        try {
+            const response = await fetch(`http://localhost:80/Home/GetUser/${email}`, {
+                method: 'GET',
+                headers: {
+                    'Content-Type': 'application/json',
+                },
+            });
+
+            if (!response.ok) {
+                throw new Error('Failed to log in');
+            }
+
+            //We can change the way accounts are validated so it is on the server side
+            const user: User = await response.json();
+            if(user.password == password)
+                setQueryResponse(SUCCESS);
+            else
+                setQueryResponse(INCORRECT_PASSWORD); // Assuming the server sends back a message
+        }
+        catch (error: any) {
+            console.error('Error logging in:', error);
+            setQueryResponse(FAILURE);
+        }
+    }
+
+    return (
+        <div>
+            <Modal show={props.showModal} onHide={props.toggleModal} className="modal-md">
+                <Modal.Header closeButton>
+                    <Modal.Title className="w-100 text-center"> Log In </Modal.Title>
+                </Modal.Header>
+                <Modal.Body>
+                    <div className="w-100 text-center">
+                        <form className="login-form">
+                            <label className="form-label" htmlFor="email">Email:</label>
+                            <input type="email" id="email" name="email" value={email} onChange={(event) => setEmail(event.target.value)} placeholder="Please enter your email" className="form-control form-control-md w-75" />
+                            <label className="mt-3 form-label" htmlFor="password"> Password:</label>
+                            <div className="input-group w-75">
+                                <input type={showPassword ? "text" : "password"} id="password" name="password" value={password} onChange={(event) => setPassword(event.target.value)} placeholder="Please enter your password" className="form-control form-control-md" />
+                                <button className="btn btn-outline-secondary" type="button" onClick={() => setShowPassword(!showPassword)}>
+                                    {showPassword ? <FaEyeSlash /> : <FaEye />}
+                                </button>
+                            </div>
+                            <div className="my-2">
+                                <div className={queryResponse === '' ? "text-white" : (queryResponse === SUCCESS ? "text-success" : "text-danger fw-semibold")}>
+                                    {queryResponse === '' ? 'Placeholder' : (queryResponse === SUCCESS ? queryResponse : '*' + queryResponse)}
+                                </div>
+                            </div>
+                        </form>
+                    </div>
+                    <div className="row">
+                        <div className="row justify-content-center d-flex">
+                            <p className="col-auto mb-1"> Don't have an account?</p>
+                            <a className="col-auto" href="/login">Sign Up</a>
+                        </div>
+                        <div className="row justify-content-center d-flex">
+                            <p className="col-auto"> Forgot Password?</p>
+                            <a className="col-auto" href="/login">Reset Password</a>
+                        </div>
+                    </div>
+                </Modal.Body>
+                <Modal.Footer className="justify-content-center d-flex">
+                    <Button className="bg-success border-0 mx-2" onClick={handleSubmit}>
+                        Submit
+                    </Button>
+                </Modal.Footer>
+            </Modal>
+        </div>
+    );
+}
+
+export default LoginModal;
\ No newline at end of file
Index: Front_End/src/Components/AppNavbar.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Container, Nav, Navbar, Form, Button } from \"react-bootstrap\";\r\nimport React, { useState, FormEvent  } from 'react';\r\nimport Tickers from '../Data/tickers.json';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoginModal from \"../Views/LoginModal\";\r\n\r\ninterface Ticker {\r\n    ticker: string;\r\n    name: string;\r\n}\r\n\r\nconst AppNavbar = () => {\r\n    const [showModal , setShowModal] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [suggestions, setSuggestions] = useState<Ticker[]>([]);\r\n    const navigate = useNavigate();\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(!showModal);\r\n      };\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setSearchTerm(value);\r\n        if (value.length > 0) {\r\n            const filteredSuggestions = Tickers.filter(\r\n                ticker => ticker.ticker.toLowerCase().includes(value.toLowerCase()) ||\r\n                          ticker.name.toLowerCase().includes(value.toLowerCase())\r\n            ).slice(0, 5); // Limiting to 5 suggestions\r\n            setSuggestions(filteredSuggestions);\r\n        } else\r\n            setSuggestions([]);\r\n    };\r\n    const handleInputSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setSearchTerm(value); \r\n        const selectedTicker = suggestions.find(suggestion => suggestion.ticker.toLowerCase() === value.toLowerCase());\r\n        if (selectedTicker) {\r\n            navigate(`/Stock/${selectedTicker.ticker}`, {replace: true})\r\n        }\r\n    };\r\n    return (\r\n        <Navbar expand=\"lg\" className=\"bg-body-tertiary-custom-bg\" style={{backgroundColor : '#333333'}}>\r\n            <Container>\r\n            <Navbar.Brand>\r\n                <span className=\"brand-name\">stock</span>\r\n                <span className=\"brand-name-secondary\">Genie</span>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Form className=\"d-flex\" onSubmit={(event) => event.preventDefault()}>\r\n                    <Form.Control\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        className=\"me-2\"\r\n                        aria-label=\"Search\"\r\n                        value={searchTerm}\r\n                        onChange={handleInputChange}\r\n                        onInput={handleInputSelect} // Added to handle option selection\r\n                        list=\"tickers-list\"\r\n                        style={{ width: '400px' }} // adjust the width as needed\r\n                    />\r\n                    <datalist id=\"tickers-list\">\r\n                        {suggestions.map((suggestion, index) => (\r\n                            <option key={index} value={suggestion.ticker}>{suggestion.name}</option>\r\n                        ))}\r\n                    </datalist>\r\n                </Form>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ms-auto\">\r\n                    <Nav.Link href=\"/\" className=\"nav-link-blue-bg\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/News\" className=\"nav-link-blue-bg\">News</Nav.Link>\r\n                    <Nav.Link onClick={toggleModal} className=\"nav-link-blue-bg\">Log In</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                <LoginModal showModal={showModal} toggleModal={toggleModal}/>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default AppNavbar;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Front_End/src/Components/AppNavbar.tsx b/Front_End/src/Components/AppNavbar.tsx
--- a/Front_End/src/Components/AppNavbar.tsx	(revision 60c35c43066e8d7080b0b669600544faf1e0c427)
+++ b/Front_End/src/Components/AppNavbar.tsx	(date 1707692242749)
@@ -2,7 +2,7 @@
 import React, { useState, FormEvent  } from 'react';
 import Tickers from '../Data/tickers.json';
 import { useNavigate } from 'react-router-dom';
-import LoginModal from "../Views/LoginModal";
+import LoginModal from "../Views/Modals/LoginModal";
 
 interface Ticker {
     ticker: string;
Index: Front_End/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"stock-prediction-app\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@alpacahq/alpaca-trade-api\": \"^3.0.1\",\r\n    \"@craco/craco\": \"^7.1.0\",\r\n    \"@testing-library/jest-dom\": \"^5.17.0\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^13.5.0\",\r\n    \"@types/jest\": \"^27.5.2\",\r\n    \"@types/react\": \"^18.2.37\",\r\n    \"@types/react-dom\": \"^18.2.15\",\r\n    \"bootstrap\": \"^5.3.2\",\r\n    \"echarts-for-react\": \"^3.0.2\",\r\n    \"finnhub\": \"^1.2.18\",\r\n    \"node-polyfill-webpack-plugin\": \"^2.0.1\",\r\n    \"path-browserify\": \"^1.0.1\",\r\n    \"querystring-es3\": \"^0.2.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-ajax\": \"^0.1.1\",\r\n    \"react-bootstrap\": \"^2.9.1\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-json-to-csv\": \"^1.2.0\",\r\n    \"react-router-dom\": \"^6.21.2\",\r\n    \"react-scripts\": \"5.0.1\",\r\n    \"recharts\": \"^2.10.3\",\r\n    \"typescript\": \"^4.9.5\",\r\n    \"web-vitals\": \"^2.1.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/node\": \"^20.10.3\",\r\n    \"@types/react-json-to-csv\": \"^1.2.4\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Front_End/package.json b/Front_End/package.json
--- a/Front_End/package.json	(revision 60c35c43066e8d7080b0b669600544faf1e0c427)
+++ b/Front_End/package.json	(date 1707692173214)
@@ -21,6 +21,7 @@
     "react-ajax": "^0.1.1",
     "react-bootstrap": "^2.9.1",
     "react-dom": "^18.2.0",
+    "react-icons": "^5.0.1",
     "react-json-to-csv": "^1.2.0",
     "react-router-dom": "^6.21.2",
     "react-scripts": "5.0.1",
Index: Front_End/package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Front_End/package-lock.json b/Front_End/package-lock.json
--- a/Front_End/package-lock.json	(revision 60c35c43066e8d7080b0b669600544faf1e0c427)
+++ b/Front_End/package-lock.json	(date 1707692173524)
@@ -26,6 +26,7 @@
         "react-ajax": "^0.1.1",
         "react-bootstrap": "^2.9.1",
         "react-dom": "^18.2.0",
+        "react-icons": "^5.0.1",
         "react-json-to-csv": "^1.2.0",
         "react-router-dom": "^6.21.2",
         "react-scripts": "5.0.1",
@@ -16094,6 +16095,14 @@
       "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-6.0.11.tgz",
       "integrity": "sha512-/6UZ2qgEyH2aqzYZgQPxEnz33NJ2gNsnHA2o5+o4wW9bLM/JYQitNP9xPhsXwC08hMMovfGe/8retsdDsczPRg=="
     },
+    "node_modules/react-icons": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.0.1.tgz",
+      "integrity": "sha512-WqLZJ4bLzlhmsvme6iFdgO8gfZP17rfjYEJ2m9RsZjZ+cc4k1hTzknEz63YS1MeT50kVzoa1Nz36f4BEx+Wigw==",
+      "peerDependencies": {
+        "react": "*"
+      }
+    },
     "node_modules/react-is": {
       "version": "17.0.2",
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
